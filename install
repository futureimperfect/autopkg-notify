#!/usr/bin/env python
#
# AutoPkgNotify - Email notifications for AutoPkg
# Copyright 2014 James Barclay
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# This script creates a LaunchDaemon for AutoPkgNotify that is scheduled
# to run according to the AUTOPKG_SCHEDULE defined in apn/settings.py. It
# then builds a package by calling the `pkg_build.sh` script.

from __future__ import print_function

import os
import shlex
import sys

from apn import settings as s
from subprocess import PIPE, Popen


# Constants
C2L = os.path.abspath(os.path.join(os.getcwd(), 'cron2launchd/cron2launchd.py'))
DEPLOYMENT_DIR = os.path.abspath(os.path.join(os.getcwd(), 'deployment'))
LAUNCHD_LABEL = 'com.github.futureimperfect.autopkg-notify'
LAUNCHD = LAUNCHD_LABEL + '.plist'
LAUNCHD_PATH = os.path.join(DEPLOYMENT_DIR, LAUNCHD)
SCRIPT = '/Library/Application Support/autopkg-notify/apn/autopkg_notify.py'


def is_root():
    '''Returns true if running as the root user.'''
    if os.geteuid() == 0:
        return True


def run_cmd(cmd):
    '''
    Run a command.
    '''
    p = Popen(
        shlex.split(cmd),
        stdout=PIPE,
        stderr=PIPE
    )

    out, err = p.communicate()
    if err:
        print(
            '''An error occurred when running command %s.
             Error: %s''' % (cmd, err)
        )

    return out


def main():
    if not is_root():
        print('This script must run as root. Exiting now.')
        sys.exit(1)

    # Generate a LaunchD plist
    # from choices in settings.py
    launchd = run_cmd(
        '%s -c \'%s %s\' -r -i -w \'%s\' -o %s -e %s -l %s' % (
            C2L,
            s.AUTOPKG_SCHEDULE,
            SCRIPT,
            s.WORKING_DIR,
            s.LOG_FILE,
            s.LOG_FILE,
            LAUNCHD_LABEL
        )
    )

    # Create the deployment dir
    # if it doesn't exist
    if not os.path.isdir(DEPLOYMENT_DIR):
        os.makedirs(DEPLOYMENT_DIR)

    # Write the LaunchD generated by
    # cron2launchd to LAUNCHD
    with open(LAUNCHD_PATH, 'w') as f:
        f.write(launchd.strip())

    if os.path.isfile(LAUNCHD_PATH):
        run_cmd(os.path.abspath(os.path.join(DEPLOYMENT_DIR, 'pkg_build.sh')))
    else:
        print('%s does not exist. Exiting now.' % LAUNCHD_PATH)

    bin_dir = os.path.abspath(os.path.join(os.getcwd, 'bin'))
    print('Successfully built deployment package in %s.' % bin_dir)


if __name__ == '__main__':
    main()
